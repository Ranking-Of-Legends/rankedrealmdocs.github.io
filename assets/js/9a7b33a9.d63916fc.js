"use strict";(self.webpackChunkranked_realm_docs=self.webpackChunkranked_realm_docs||[]).push([[670],{5385:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"ROL/PERMISSIONS","title":"Frontend Permission System","description":"This document outlines the frontend permission system used in the Ranking of Legends (ROL) Event Management Platform.","source":"@site/docs/ROL/PERMISSIONS.md","sourceDirName":"ROL","slug":"/ROL/PERMISSIONS","permalink":"/docs/ROL/PERMISSIONS","draft":false,"unlisted":false,"editUrl":"https://github.com/Ranking-Of-Legends/rankedrealmdocs.github.io/tree/main/packages/create-docusaurus/templates/shared/docs/ROL/PERMISSIONS.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Introduction to the Ranking of Legends (RoL) Event Management System","permalink":"/docs/ROL/INTRODUCTION"},"next":{"title":"Ranking of Legends (RoL) Event Management System - Business Overview","permalink":"/docs/ROL/ROL-Event-Management-System"}}');var i=s(4848),l=s(8453);const t={},a="Frontend Permission System",o={},c=[{value:"Organizational Structure",id:"organizational-structure",level:2},{value:"Role Types",id:"role-types",level:2},{value:"ROL Staff Roles",id:"rol-staff-roles",level:3},{value:"Esports Organization Roles",id:"esports-organization-roles",level:3},{value:"Permission Types",id:"permission-types",level:2},{value:"Resource Permissions",id:"resource-permissions",level:3},{value:"Feature Permissions",id:"feature-permissions",level:3},{value:"Role-Based Permissions",id:"role-based-permissions",level:2},{value:"ROL Staff Permissions",id:"rol-staff-permissions",level:3},{value:"Owner",id:"owner",level:4},{value:"Platform Admin",id:"platform-admin",level:4},{value:"Tournament Director",id:"tournament-director",level:4},{value:"League Director",id:"league-director",level:4},{value:"Customer Service",id:"customer-service",level:4},{value:"Tournament/League Coordinator",id:"tournamentleague-coordinator",level:4},{value:"Esports Organization Permissions",id:"esports-organization-permissions",level:3},{value:"Org Owner",id:"org-owner",level:4},{value:"Org Manager",id:"org-manager",level:4},{value:"Org Staff",id:"org-staff",level:4},{value:"Implementation Details",id:"implementation-details",level:2},{value:"Permission Checks",id:"permission-checks",level:3},{value:"Security Considerations",id:"security-considerations",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Backend Permissions System",id:"backend-permissions-system",level:2},{value:"Design Philosophy",id:"design-philosophy",level:3},{value:"Table Access Patterns",id:"table-access-patterns",level:3},{value:"ROL Staff Tables",id:"rol-staff-tables",level:4},{value:"Esports Organization Tables",id:"esports-organization-tables",level:4},{value:"Tournament and League Tables",id:"tournament-and-league-tables",level:4},{value:"Security Principles",id:"security-principles",level:3},{value:"Implementation Strategy",id:"implementation-strategy",level:3},{value:"Best Practices",id:"best-practices-1",level:3},{value:"Migration Plan",id:"migration-plan",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"frontend-permission-system",children:"Frontend Permission System"})}),"\n",(0,i.jsx)(n.p,{children:"This document outlines the frontend permission system used in the Ranking of Legends (ROL) Event Management Platform."}),"\n",(0,i.jsx)(n.h2,{id:"organizational-structure",children:"Organizational Structure"}),"\n",(0,i.jsx)(n.p,{children:"The platform serves two distinct organizational structures:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"ROL Platform Staff"}),": Employees and staff members of the Ranking of Legends platform itself"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Esports Organizations"}),": External organizations that use the platform for their teams and events"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"role-types",children:"Role Types"}),"\n",(0,i.jsx)(n.h3,{id:"rol-staff-roles",children:"ROL Staff Roles"}),"\n",(0,i.jsx)(n.p,{children:"Staff members who work for the Ranking of Legends platform:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"owner\r\n\u251c\u2500\u2500 platform_admin\r\n\u2502   \u251c\u2500\u2500 customer_service\r\n\u2502   \u251c\u2500\u2500 tournament_director\r\n\u2502   \u2502   \u2514\u2500\u2500 tournament_coordinator\r\n\u2502   \u2514\u2500\u2500 league_director\r\n\u2502       \u2514\u2500\u2500 league_coordinator\n"})}),"\n",(0,i.jsx)(n.h3,{id:"esports-organization-roles",children:"Esports Organization Roles"}),"\n",(0,i.jsx)(n.p,{children:"Staff members of external esports organizations:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"org_owner\r\n\u251c\u2500\u2500 org_manager\r\n\u2514\u2500\u2500 org_staff\n"})}),"\n",(0,i.jsx)(n.h2,{id:"permission-types",children:"Permission Types"}),"\n",(0,i.jsx)(n.h3,{id:"resource-permissions",children:"Resource Permissions"}),"\n",(0,i.jsx)(n.p,{children:"Resource permissions control CRUD (Create, Read, Update, Delete) operations on specific resources:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Resource"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"rol_staff"}),(0,i.jsx)(n.td,{children:"ROL platform staff management"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"tournaments"}),(0,i.jsx)(n.td,{children:"Tournament creation and management"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"leagues"}),(0,i.jsx)(n.td,{children:"League creation and management"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"teams"}),(0,i.jsx)(n.td,{children:"Team roster and management"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"esports_orgs"}),(0,i.jsx)(n.td,{children:"Esports organization management"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"feature-permissions",children:"Feature Permissions"}),"\n",(0,i.jsx)(n.p,{children:"Feature permissions control access to specific platform features:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Feature"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"viewAnalytics"}),(0,i.jsx)(n.td,{children:"Access to platform analytics"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"manageSettings"}),(0,i.jsx)(n.td,{children:"Access to platform-wide settings"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"role-based-permissions",children:"Role-Based Permissions"}),"\n",(0,i.jsx)(n.h3,{id:"rol-staff-permissions",children:"ROL Staff Permissions"}),"\n",(0,i.jsx)(n.h4,{id:"owner",children:"Owner"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Resources"}),": Full CRUD access to all resources"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Features"}),": Access to all features"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Can Manage"}),": All ROL staff roles except other owners"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"platform-admin",children:"Platform Admin"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Resources"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"ROL Staff: Create, Read, Update"}),"\n",(0,i.jsx)(n.li,{children:"Tournaments/Leagues: Full CRUD"}),"\n",(0,i.jsx)(n.li,{children:"Teams: Read, Update"}),"\n",(0,i.jsx)(n.li,{children:"Esports Orgs: Read"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Features"}),": All features"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Can Manage"}),": All ROL staff roles except owner"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"tournament-director",children:"Tournament Director"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Resources"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Tournaments: Create, Read, Update"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Features"}),": Analytics"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Can Manage"}),": Tournament coordinators"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"league-director",children:"League Director"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Resources"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Leagues: Create, Read, Update"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Features"}),": Analytics"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Can Manage"}),": League coordinators"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"customer-service",children:"Customer Service"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Resources"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Teams/Tournaments/Leagues/Esports Orgs: Read only"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Features"}),": None"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Can Manage"}),": None"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"tournamentleague-coordinator",children:"Tournament/League Coordinator"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Resources"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Respective resource (Tournament/League): Read, Update"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Features"}),": None"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Can Manage"}),": None"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"esports-organization-permissions",children:"Esports Organization Permissions"}),"\n",(0,i.jsx)(n.h4,{id:"org-owner",children:"Org Owner"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Resources"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Teams: Full CRUD"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Features"}),": Analytics for their organization"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Can Manage"}),": Their organization's staff"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"org-manager",children:"Org Manager"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Resources"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Teams: Create, Read, Update"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Features"}),": Analytics for their organization"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Can Manage"}),": Their organization's staff"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"org-staff",children:"Org Staff"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Resources"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Teams: Read only"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Features"}),": None"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Can Manage"}),": None"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"implementation-details",children:"Implementation Details"}),"\n",(0,i.jsx)(n.h3,{id:"permission-checks",children:"Permission Checks"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// Check if user is ROL staff\r\nisRolStaff('platform_admin') // true\r\nisRolStaff('org_manager') // false\r\n\r\n// Check resource permissions\r\nhasResourcePermission('owner', 'tournaments', 'create') // true\r\nhasResourcePermission('org_staff', 'teams', 'update') // false\r\n\r\n// Check feature access\r\nhasFeaturePermission('platform_admin', 'viewAnalytics') // true\r\nhasFeaturePermission('org_staff', 'manageSettings') // false\n"})}),"\n",(0,i.jsx)(n.h2,{id:"security-considerations",children:"Security Considerations"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Frontend permissions are for UX purposes only"}),"\n",(0,i.jsx)(n.li,{children:"All operations are validated on the backend through Supabase"}),"\n",(0,i.jsx)(n.li,{children:"Esports organization staff cannot access ROL platform management features"}),"\n",(0,i.jsx)(n.li,{children:"ROL staff permissions are completely separate from esports organization permissions"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Always verify organization context when checking permissions"}),"\n",(0,i.jsx)(n.li,{children:"Keep ROL staff and esports organization permissions separate"}),"\n",(0,i.jsx)(n.li,{children:"Use the provided utility functions for permission checks"}),"\n",(0,i.jsx)(n.li,{children:"Implement appropriate route guards"}),"\n",(0,i.jsx)(n.li,{children:"Handle unauthorized access gracefully"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"backend-permissions-system",children:"Backend Permissions System"}),"\n",(0,i.jsx)(n.p,{children:"The backend permissions system is implemented through Supabase Row Level Security (RLS) policies. While the frontend handles detailed permission logic, the backend focuses on fundamental access control and data isolation."}),"\n",(0,i.jsx)(n.h3,{id:"design-philosophy",children:"Design Philosophy"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Simplified RLS Policies"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Focus on basic authentication and ownership checks"}),"\n",(0,i.jsx)(n.li,{children:"Avoid complex role-based logic at the database level"}),"\n",(0,i.jsx)(n.li,{children:"Prevent recursion issues in policy checks"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Data Isolation"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"ROL staff data is completely separate from esports organization data"}),"\n",(0,i.jsx)(n.li,{children:"Each organization's data is isolated from other organizations"}),"\n",(0,i.jsx)(n.li,{children:"Clear boundaries between platform management and organization management"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"table-access-patterns",children:"Table Access Patterns"}),"\n",(0,i.jsx)(n.h4,{id:"rol-staff-tables",children:"ROL Staff Tables"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"-- Example: staff_members table policy\r\nCREATE POLICY \"Staff members are viewable by authenticated users\"\r\n    ON staff_members FOR SELECT\r\n    USING (auth.role() = 'authenticated');\r\n\r\n-- Simplified management policy\r\nCREATE POLICY \"Only super admin can manage staff\"\r\n    ON staff_members FOR ALL\r\n    USING (auth.uid() IN (\r\n        SELECT user_id FROM staff_members \r\n        WHERE role = 'owner'\r\n    ));\n"})}),"\n",(0,i.jsx)(n.h4,{id:"esports-organization-tables",children:"Esports Organization Tables"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"-- Example: organizations table policy\r\nCREATE POLICY \"Organizations are viewable by everyone\"\r\n    ON organizations FOR SELECT\r\n    USING (true);\r\n\r\nCREATE POLICY \"Organizations managed by their staff\"\r\n    ON organizations FOR UPDATE\r\n    USING (\r\n        auth.uid() IN (\r\n            SELECT user_id FROM org_members \r\n            WHERE organization_id = id \r\n            AND role IN ('org_owner', 'org_manager')\r\n        )\r\n    );\n"})}),"\n",(0,i.jsx)(n.h4,{id:"tournament-and-league-tables",children:"Tournament and League Tables"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"-- Example: tournaments table policy\r\nCREATE POLICY \"Tournaments are viewable by everyone\"\r\n    ON tournaments FOR SELECT\r\n    USING (true);\r\n\r\nCREATE POLICY \"Tournaments managed by ROL staff\"\r\n    ON tournaments FOR INSERT\r\n    USING (\r\n        auth.uid() IN (\r\n            SELECT user_id FROM staff_members\r\n            WHERE role IN ('owner', 'platform_admin', 'tournament_director')\r\n        )\r\n    );\n"})}),"\n",(0,i.jsx)(n.h3,{id:"security-principles",children:"Security Principles"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Authentication First"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"All sensitive operations require authentication"}),"\n",(0,i.jsxs)(n.li,{children:["Use ",(0,i.jsx)(n.code,{children:"auth.role() = 'authenticated'"})," for basic checks"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Ownership Verification"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["ROL staff ownership through ",(0,i.jsx)(n.code,{children:"staff_members"})," table"]}),"\n",(0,i.jsxs)(n.li,{children:["Organization ownership through ",(0,i.jsx)(n.code,{children:"org_members"})," table"]}),"\n",(0,i.jsx)(n.li,{children:"Team ownership through direct relationship"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Simplified Role Checks"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Avoid complex role hierarchies in policies"}),"\n",(0,i.jsx)(n.li,{children:"Use simple IN clauses for role checks"}),"\n",(0,i.jsx)(n.li,{children:"Maintain role lists in application code"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Data Segregation"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"-- Example: Team isolation policy\r\nCREATE POLICY \"Teams are managed by their organization\"\r\n    ON teams FOR ALL\r\n    USING (\r\n        auth.uid() IN (\r\n            SELECT user_id FROM org_members \r\n            WHERE organization_id = teams.organization_id\r\n        )\r\n        OR\r\n        auth.uid() IN (\r\n            SELECT user_id FROM staff_members\r\n            WHERE role IN ('owner', 'platform_admin')\r\n        )\r\n    );\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"implementation-strategy",children:"Implementation Strategy"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Base Policies"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"READ: Generally permissive for authenticated users"}),"\n",(0,i.jsx)(n.li,{children:"CREATE/UPDATE/DELETE: Strict ownership checks"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"ROL Staff Access"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Simple role checks for platform staff"}),"\n",(0,i.jsx)(n.li,{children:"No recursive permission checks"}),"\n",(0,i.jsx)(n.li,{children:"Direct table queries for role verification"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Organization Access"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Organization-based isolation"}),"\n",(0,i.jsx)(n.li,{children:"Role checks within organization context"}),"\n",(0,i.jsx)(n.li,{children:"Clear separation from ROL staff permissions"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Cross-Cutting Concerns"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Audit logging at database level"}),"\n",(0,i.jsx)(n.li,{children:"Consistent timestamp management"}),"\n",(0,i.jsx)(n.li,{children:"Error handling and constraints"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"best-practices-1",children:"Best Practices"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Policy Design"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Keep policies simple and focused"}),"\n",(0,i.jsx)(n.li,{children:"Avoid complex joins in policies"}),"\n",(0,i.jsx)(n.li,{children:"Use security definer functions for complex checks"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Performance"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Index commonly used columns in policies"}),"\n",(0,i.jsx)(n.li,{children:"Minimize policy complexity"}),"\n",(0,i.jsx)(n.li,{children:"Cache role checks where possible"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Maintenance"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Document policy changes"}),"\n",(0,i.jsx)(n.li,{children:"Test policies thoroughly"}),"\n",(0,i.jsx)(n.li,{children:"Monitor policy performance"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Security"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Regular security audits"}),"\n",(0,i.jsx)(n.li,{children:"Principle of least privilege"}),"\n",(0,i.jsx)(n.li,{children:"Clear separation of concerns"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"migration-plan",children:"Migration Plan"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Current to Target State"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Identify complex policies"}),"\n",(0,i.jsx)(n.li,{children:"Simplify role-based checks"}),"\n",(0,i.jsx)(n.li,{children:"Move complex logic to application layer"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Testing Strategy"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Unit tests for policies"}),"\n",(0,i.jsx)(n.li,{children:"Integration tests for permissions"}),"\n",(0,i.jsx)(n.li,{children:"Security penetration testing"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Rollout Strategy"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Gradual policy updates"}),"\n",(0,i.jsx)(n.li,{children:"Monitoring and validation"}),"\n",(0,i.jsx)(n.li,{children:"Rollback procedures"}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>a});var r=s(6540);const i={},l=r.createContext(i);function t(e){const n=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);