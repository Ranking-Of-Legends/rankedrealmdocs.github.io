"use strict";(self.webpackChunkranked_realm_docs=self.webpackChunkranked_realm_docs||[]).push([[4],{2192:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"ROL/authentication","title":"Authentication Documentation","description":"This document outlines the authentication implementation in the project using Supabase and SvelteKit.","source":"@site/docs/ROL/authentication.md","sourceDirName":"ROL","slug":"/ROL/authentication","permalink":"/docs/ROL/authentication","draft":false,"unlisted":false,"editUrl":"https://github.com/Ranking-Of-Legends/rankedrealmdocs.github.io/tree/main/packages/create-docusaurus/templates/shared/docs/ROL/authentication.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Alternative Authentication & Permissions System","permalink":"/docs/ROL/alt-auth-system"},"next":{"title":"Database Authentication & Permissions","permalink":"/docs/ROL/database-auth"}}');var t=s(4848),i=s(8453);const a={},l="Authentication Documentation",o={},c=[{value:"Overview",id:"overview",level:2},{value:"Dependencies",id:"dependencies",level:2},{value:"Implementation Components",id:"implementation-components",level:2},{value:"1. Supabase Client Setup (<code>src/lib/supabase.ts</code>)",id:"1-supabase-client-setup-srclibsupabasets",level:3},{value:"2. Server-Side Hooks (<code>src/hooks.server.ts</code>)",id:"2-server-side-hooks-srchooksserverts",level:3},{value:"Supabase Handler",id:"supabase-handler",level:4},{value:"Auth Guard",id:"auth-guard",level:4},{value:"3. Layout Handling",id:"3-layout-handling",level:3},{value:"Server Layout (<code>src/routes/+layout.server.ts</code>)",id:"server-layout-srcrouteslayoutserverts",level:4},{value:"Client Layout (<code>src/routes/+layout.ts</code>)",id:"client-layout-srcrouteslayoutts",level:4},{value:"Security Features",id:"security-features",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Usage",id:"usage",level:2},{value:"Environment Variables",id:"environment-variables",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"authentication-documentation",children:"Authentication Documentation"})}),"\n",(0,t.jsx)(n.p,{children:"This document outlines the authentication implementation in the project using Supabase and SvelteKit."}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsx)(n.p,{children:"The project uses Supabase for authentication, implementing a secure server-side authentication guard with protected routes and proper session management. The implementation follows best practices for both server and client-side handling."}),"\n",(0,t.jsx)(n.h2,{id:"dependencies",children:"Dependencies"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\r\n  "@supabase/auth-helpers-sveltekit": "^0.13.0",\r\n  "@supabase/ssr": "^0.5.2",\r\n  "@supabase/supabase-js": "^2.47.10"\r\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"implementation-components",children:"Implementation Components"}),"\n",(0,t.jsxs)(n.h3,{id:"1-supabase-client-setup-srclibsupabasets",children:["1. Supabase Client Setup (",(0,t.jsx)(n.code,{children:"src/lib/supabase.ts"}),")"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { createClient } from '@supabase/supabase-js'\r\nimport { PUBLIC_SUPABASE_URL, PUBLIC_SUPABASE_ANON_KEY } from '$env/static/public'\r\n\r\nexport const supabase = createClient(PUBLIC_SUPABASE_URL, PUBLIC_SUPABASE_ANON_KEY)\n"})}),"\n",(0,t.jsx)(n.p,{children:"This creates the base Supabase client using environment variables for configuration."}),"\n",(0,t.jsxs)(n.h3,{id:"2-server-side-hooks-srchooksserverts",children:["2. Server-Side Hooks (",(0,t.jsx)(n.code,{children:"src/hooks.server.ts"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"The server-side implementation consists of two main handlers:"}),"\n",(0,t.jsx)(n.h4,{id:"supabase-handler",children:"Supabase Handler"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Creates a server-specific Supabase client for each request"}),"\n",(0,t.jsx)(n.li,{children:"Manages cookie handling with proper path settings"}),"\n",(0,t.jsx)(n.li,{children:"Implements secure session validation"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const supabase: Handle = async ({ event, resolve }) => {\r\n  event.locals.supabase = createServerClient(PUBLIC_SUPABASE_URL, PUBLIC_SUPABASE_ANON_KEY, {\r\n    cookies: {\r\n      getAll: () => event.cookies.getAll(),\r\n      setAll: (cookiesToSet) => {\r\n        cookiesToSet.forEach(({ name, value, options }) => {\r\n          event.cookies.set(name, value, { ...options, path: '/' })\r\n        })\r\n      },\r\n    },\r\n  })\r\n  // ... session validation logic\r\n}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"auth-guard",children:"Auth Guard"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Protects routes under ",(0,t.jsx)(n.code,{children:"/private"})]}),"\n",(0,t.jsx)(n.li,{children:"Handles redirects based on authentication state"}),"\n",(0,t.jsx)(n.li,{children:"Validates JWT tokens"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const authGuard: Handle = async ({ event, resolve }) => {\r\n  const { session, user } = await event.locals.safeGetSession()\r\n  event.locals.session = session\r\n  event.locals.user = user\r\n\r\n  if (!event.locals.session && event.url.pathname.startsWith('/private')) {\r\n    redirect(303, '/auth')\r\n  }\r\n\r\n  if (event.locals.session && event.url.pathname === '/auth') {\r\n    redirect(303, '/private')\r\n  }\r\n\r\n  return resolve(event)\r\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"3-layout-handling",children:"3. Layout Handling"}),"\n",(0,t.jsxs)(n.h4,{id:"server-layout-srcrouteslayoutserverts",children:["Server Layout (",(0,t.jsx)(n.code,{children:"src/routes/+layout.server.ts"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"Handles server-side session management and cookie access:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"export const load: LayoutServerLoad = async ({ locals: { safeGetSession }, cookies }) => {\r\n  const { session } = await safeGetSession()\r\n  return {\r\n    session,\r\n    cookies: cookies.getAll(),\r\n  }\r\n}\n"})}),"\n",(0,t.jsxs)(n.h4,{id:"client-layout-srcrouteslayoutts",children:["Client Layout (",(0,t.jsx)(n.code,{children:"src/routes/+layout.ts"}),")"]}),"\n",(0,t.jsx)(n.p,{children:"Manages client-side authentication state:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"export const load: LayoutLoad = async (event) => {\r\n  event.depends('supabase:auth')\r\n\r\n  const supabase = isBrowser()\r\n    ? createBrowserClient(/*...*/)\r\n    : createServerClient(/*...*/)\r\n\r\n  const {\r\n    data: { session },\r\n  } = await supabase.auth.getSession()\r\n\r\n  const {\r\n    data: { user },\r\n  } = await supabase.auth.getUser()\r\n\r\n  return { session, supabase, user }\r\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"security-features",children:"Security Features"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"JWT Validation"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Server-side validation of JWT tokens"}),"\n",(0,t.jsxs)(n.li,{children:["Safe session retrieval with ",(0,t.jsx)(n.code,{children:"safeGetSession()"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Protected Routes"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Automatic redirects for unauthenticated users"}),"\n",(0,t.jsx)(n.li,{children:"Prevention of authenticated users accessing auth pages"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Cookie Security"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Explicit path settings"}),"\n",(0,t.jsx)(n.li,{children:"Secure cookie management"}),"\n",(0,t.jsx)(n.li,{children:"Cross-platform compatibility"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Session Management"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Proper invalidation"}),"\n",(0,t.jsx)(n.li,{children:"Dependency tracking for auth state changes"}),"\n",(0,t.jsx)(n.li,{children:"Type-safe implementation"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Separation of Concerns"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Clear distinction between server and client code"}),"\n",(0,t.jsx)(n.li,{children:"Modular implementation with hooks and layouts"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Type Safety"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Full TypeScript implementation"}),"\n",(0,t.jsx)(n.li,{children:"Proper type definitions for all components"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Error Handling"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Proper validation of auth states"}),"\n",(0,t.jsx)(n.li,{children:"Secure fallbacks for failed authentications"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Performance"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Efficient session management"}),"\n",(0,t.jsx)(n.li,{children:"Proper caching of auth states"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsxs)(n.p,{children:["To protect a route, place it under the ",(0,t.jsx)(n.code,{children:"/private"})," directory. The auth guard will automatically:"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Redirect unauthenticated users to ",(0,t.jsx)(n.code,{children:"/auth"})]}),"\n",(0,t.jsx)(n.li,{children:"Allow authenticated users to access the protected route"}),"\n",(0,t.jsxs)(n.li,{children:["Redirect authenticated users away from ",(0,t.jsx)(n.code,{children:"/auth"})," to ",(0,t.jsx)(n.code,{children:"/private"})]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,t.jsx)(n.p,{children:"The following environment variables are required:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"PUBLIC_SUPABASE_URL"}),": Your Supabase project URL"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"PUBLIC_SUPABASE_ANON_KEY"}),": Your Supabase anonymous key"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["These should be set in your ",(0,t.jsx)(n.code,{children:".env"})," file:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-env",children:"PUBLIC_SUPABASE_URL=your_supabase_url\r\nPUBLIC_SUPABASE_ANON_KEY=your_supabase_anon_key\n"})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>l});var r=s(6540);const t={},i=r.createContext(t);function a(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);